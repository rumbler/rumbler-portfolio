name: Release CD

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy'
        required: true
        type: string
  pull_request:
    types: [closed]
    branches:
      - "main"

permissions:
  packages: write      # Para push de imagens Docker
  contents: write     # Para checkout do cÃ³digo e criar tags
  actions: read       # Para ler o workflow anterior
  checks: write       # Para atualizar o status
  deployments: write  # Para criar deployments

jobs:
  deploy-release:
    name: Deploy to Release
    if: github.event.pull_request.merged == true && github.base_ref == 'main'
    runs-on: self-hosted
    environment: release
    env:
      NODE_ENV: release
      PORT: 3002
      DOCKER_CPU_LIMIT: 0.75
      DOCKER_MEMORY_LIMIT: 384M
      DOCKER_CPU_RESERVE: 0.5
      DOCKER_MEMORY_RESERVE: 256M
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Create RC tag
        id: create_tag
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          COMMIT_HASH=$(git rev-parse --short HEAD)
          VERSION="${LAST_TAG%-*}-rc.${COMMIT_HASH}"
          git tag $VERSION
          git push origin $VERSION
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
      
      - name: Build from development artifact
        env:
          NEXUS_PASS: ${{ secrets.NEXUS_PASSWORD }}
          NEXUS_URL: ${{ secrets.NEXUS_URL }}
          NEXUS_REPO: ${{ secrets.NEXUS_REPOSITORY }}
          DEV_VERSION: "pr-${{ github.event.pull_request.number }}-${{ github.event.pull_request.head.sha }}"
        run: |
          mkdir -p build
          curl -u "${{ secrets.NEXUS_USERNAME }}:$NEXUS_PASS" \
            -o build.zip \
            "${NEXUS_URL}/repository/${NEXUS_REPO}/${{ github.event.repository.name }}/${DEV_VERSION}/build.zip"
          unzip build.zip -d build/

      - name: Upload RC build to Nexus
        env:
          NEXUS_PASS: ${{ secrets.NEXUS_PASSWORD }}
          NEXUS_URL: ${{ secrets.NEXUS_URL }}
          NEXUS_REPO: ${{ secrets.NEXUS_REPOSITORY }}
        run: |
          cd build
          zip -r ../rc-build.zip .
          cd ..
          curl -u "${{ secrets.NEXUS_USERNAME }}:$NEXUS_PASS" \
            --upload-file rc-build.zip \
            "${NEXUS_URL}/repository/${NEXUS_REPO}/${{ github.event.repository.name }}/${{ steps.create_tag.outputs.version }}/build.zip"

      - name: Build and push Docker image
        env:
          REGISTRY_URL: ${{ secrets.REGISTRY_URL }}
        run: |
          VERSION=${{ steps.create_tag.outputs.version }}
          docker build -t ${REGISTRY_URL}/${{ github.event.repository.name }}:${VERSION} .
          docker push ${REGISTRY_URL}/${{ github.event.repository.name }}:${VERSION}
          
          # Tag as release
          docker tag ${REGISTRY_URL}/${{ github.event.repository.name }}:${VERSION} ${REGISTRY_URL}/${{ github.event.repository.name }}:release
          docker push ${REGISTRY_URL}/${{ github.event.repository.name }}:release

      - name: Deploy to Release
        env:
          IMAGE_TAG: ${{ steps.create_tag.outputs.version }}
        run: |
          # Pull new image first
          docker compose -f docker-compose.yml -f docker-compose.release.yml pull
          
          # Rolling update - zero downtime
          docker compose -f docker-compose.yml -f docker-compose.release.yml up -d --no-deps --build --force-recreate --remove-orphans
