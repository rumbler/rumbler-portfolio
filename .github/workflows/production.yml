name: Production Deployment

permissions:
  packages: write      # Para push de imagens Docker
  contents: read      # Para checkout do cÃ³digo
  actions: read       # Para ler o workflow anterior (CI)
  checks: write       # Para atualizar o status do workflow
  deployments: write  # Para criar deployments

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
    secrets:
      nexus_username:
        required: true
      nexus_password:
        required: true

jobs:
  deploy-production:
    name: Deploy to Production
    runs-on: self-hosted
    environment:
      name: production
      url: https://rumblersoppa.com.br
    env:
      NODE_ENV: production
      PORT: 3000
      DOCKER_CPU_LIMIT: 1.0
      DOCKER_MEMORY_LIMIT: 512M
      DOCKER_CPU_RESERVE: 0.5
      DOCKER_MEMORY_RESERVE: 256M
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build from Nexus
        env:
          NEXUS_PASS: ${{ secrets.nexus_password }}
        run: |
          mkdir -p build
          curl -u "${{ secrets.nexus_username }}:$NEXUS_PASS" \
            -o build.zip \
            "https://pkg.rumblersoppa.com.br/repository/raw-hosted/rumbler-portfolio/${{ inputs.version }}/build.zip"
          unzip build.zip -d build/
          rm build.zip

      - name: Login to Nexus Docker Registry
        uses: docker/login-action@v2
        with:
          registry: registry.rumblersoppa.com.br
          username: ${{ secrets.nexus_username }}
          password: ${{ secrets.nexus_password }}
      
      - name: Build and Push Production Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            registry.rumblersoppa.com.br/portfolio:${{ inputs.version }}
            registry.rumblersoppa.com.br/portfolio:latest

      - name: Set Environment Variables
        run: |
          echo "IMAGE_TAG=${{ inputs.version }}" >> $GITHUB_ENV

      - name: Deploy to Production
        run: |
          docker compose down
          docker compose up -d
