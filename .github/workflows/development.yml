name: Development Deployment

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types:
      - completed
    branches:
      - development

jobs:
  deploy-development:
    runs-on: self-hosted
    if: github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Debug Workflow Context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: |
          echo "Event that triggered the workflow: ${{ github.event_name }}"
          echo "Workflow Run ID: ${{ github.event.workflow_run.id }}"
          echo "Workflow Run Status: ${{ github.event.workflow_run.status }}"
          echo "Workflow Run Conclusion: ${{ github.event.workflow_run.conclusion }}"
          echo "Branch: ${{ github.event.workflow_run.head_branch }}"
          echo "Full GitHub Context:"
          echo "$GITHUB_CONTEXT"

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
      
      - name: Get commit hash
        id: commit
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      
      - name: Download build from Nexus
        run: |
          mkdir -p dist
          curl -u ${{ secrets.NEXUS_USERNAME }}:${{ secrets.NEXUS_PASSWORD }} \
            -o build.zip \
            "https://pkg.rumblersoppa.com.br/repository/raw-hosted/rumbler-portfolio/${{ github.event.workflow_run.head_sha }}/build.zip"
          unzip build.zip -d dist/
          rm build.zip

      - name: Login to Nexus Docker Registry
        uses: docker/login-action@v2
        with:
          registry: registry.rumblersoppa.com.br
          username: ${{ secrets.NEXUS_USERNAME }}
          password: ${{ secrets.NEXUS_PASSWORD }}
      
      - name: Build Development Image
        run: |
          docker build \
            --build-arg NODE_ENV=development \
            -t registry.rumblersoppa.com.br/portfolio:dev \
            -t registry.rumblersoppa.com.br/portfolio:${{ steps.commit.outputs.hash }} \
            .
      
      - name: Push Docker Image
        run: |
          docker push registry.rumblersoppa.com.br/portfolio:dev
          docker push registry.rumblersoppa.com.br/portfolio:${{ steps.commit.outputs.hash }}
      
      - name: Deploy to Development
        run: |
          echo "IMAGE_TAG=${{ steps.commit.outputs.hash }}" > .env
          docker-compose down
          NODE_ENV=development \
          DOCKER_CPU_LIMIT=0.5 \
          DOCKER_MEMORY_LIMIT=128M \
          DOCKER_CPU_RESERVE=0.25 \
          DOCKER_MEMORY_RESERVE=64M \
          PORT=3001 \
          docker-compose up -d
          
          echo "Deployed version: ${{ steps.commit.outputs.hash }}"
          
      - name: Clean old images
        # Remove imagens antigas para liberar espa√ßo
        run: |
          docker image prune -f --filter "until=24h"
          docker image rm registry.rumblersoppa.com.br/portfolio:${{ steps.commit.outputs.hash }}
