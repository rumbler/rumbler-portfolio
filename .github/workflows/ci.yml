name: Continuous Integration

on:
  push:
    branches: 
      - "development"
      - "feat/**"
      - "fix/**"
      - "docs/**"
      - "style/**"
      - "refactor/**"
      - "test/**"
      - "chore/**"
    tags:
      - 'v*-rc.*'
      - 'v[0-9]*.[0-9]*.[0-9]*'

  pull_request:
    branches: 
      - "development"
      - "main"

  pull_request_target:
    types: [closed]
    branches:
      - "development"
      - "main"

jobs:
  build-and-test:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.10.0

      - uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Install dependencies
        run: pnpm install

      - name: Run tests
        run: pnpm test

      - name: Build
        run: pnpm build

      - name: Create build artifact
        if: |
          (github.event_name == 'pull_request_target' && github.event.pull_request.merged == true) ||
          (github.event_name == 'push' && (github.ref == 'refs/heads/development' || startsWith(github.ref, 'refs/tags/v')))
        run: |
          cd build
          zip -r ../build.zip .
          cd ..

      - name: Set Version and Environment
        id: version
        if: |
          (github.event_name == 'pull_request_target' && github.event.pull_request.merged == true) ||
          (github.event_name == 'push' && (github.ref == 'refs/heads/development' || startsWith(github.ref, 'refs/tags/v')))
        run: |
          if [[ $GITHUB_EVENT_NAME == 'pull_request_target' && "${{ github.event.pull_request.merged }}" == 'true' ]]; then
            if [[ $GITHUB_BASE_REF == 'development' ]]; then
              VERSION=$(git rev-parse --short HEAD)
              ENVIRONMENT="development"
            elif [[ $GITHUB_BASE_REF == 'main' ]]; then
              VERSION="v$(git rev-parse --short HEAD)"
              ENVIRONMENT="release"
            fi
          elif [[ $GITHUB_EVENT_NAME == 'push' ]]; then
            if [[ $GITHUB_REF == 'refs/heads/development' ]]; then
              VERSION=$(git rev-parse --short HEAD)
              ENVIRONMENT="development"
            elif [[ $GITHUB_REF == refs/tags/* ]]; then
              VERSION=${GITHUB_REF#refs/tags/}
              if [[ $VERSION == *-rc.* ]]; then
                ENVIRONMENT="release-candidate"
              else
                ENVIRONMENT="production"
              fi
            fi
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT

      - name: Upload to Nexus
        if: |
          (github.event_name == 'pull_request_target' && github.event.pull_request.merged == true) ||
          (github.event_name == 'push' && (github.ref == 'refs/heads/development' || startsWith(github.ref, 'refs/tags/v')))
        env:
          NEXUS_PASS: ${{ secrets.NEXUS_PASSWORD }}
          NEXUS_URL: ${{ secrets.NEXUS_URL }}
          NEXUS_REPO: ${{ secrets.NEXUS_REPOSITORY }}
        run: |
          curl -u "${{ secrets.NEXUS_USERNAME }}:$NEXUS_PASS" \
            --upload-file build.zip \
            "${NEXUS_URL}/repository/${NEXUS_REPO}/${{ github.event.repository.name }}/${{ steps.version.outputs.environment }}/${{ steps.version.outputs.version }}.zip"
