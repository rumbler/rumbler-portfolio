name: Continuous Integration

on:
  push:
    branches: 
      - "development"
      - "main"
    tags:
      - 'v*-rc.*'
      - 'v[0-9]*.[0-9]*.[0-9]*'

  pull_request:
    branches: 
      - "development"
      - "main"

jobs:
  build-and-upload:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set version and environment
        id: version
        if: |
          github.event_name == 'push' && (github.ref == 'refs/heads/development' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
        run: |
          case "${{ github.ref }}" in
            refs/heads/development) VERSION="$(git rev-parse --short HEAD)"; ENVIRONMENT="development" ;;
            refs/heads/main)       VERSION="rc-$(git rev-parse --short HEAD)"; ENVIRONMENT="release" ;;
            refs/tags/v[0-9]*.[0-9]*.[0-9]*) VERSION="${{ github.ref_name }}"; ENVIRONMENT="production" ;;
            *)                     VERSION="dev-$(git rev-parse --short HEAD)"; ENVIRONMENT="development" ;;
          esac

          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "environment=${ENVIRONMENT}" >> $GITHUB_OUTPUT

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build
        env:
          NODE_ENV: ${{ steps.version.outputs.environment }}
          REACT_APP_EMAIL_URL: ${{ secrets.REACT_APP_EMAIL_URL }}
          REACT_APP_GITHUB_URL: ${{ secrets.REACT_APP_GITHUB_URL }}
          REACT_APP_LINKEDIN_URL: ${{ secrets.REACT_APP_LINKEDIN_URL }}
          REACT_APP_WHATSAPP_URL: ${{ secrets.REACT_APP_WHATSAPP_URL }}
        run: |
          pnpm run build

      - uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      - uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Zip build
        run: |
          cd build
          zip -r ../build.zip .
          cd ..

      - name: Upload to Nexus
        if: |
          github.event_name == 'push' && (github.ref == 'refs/heads/development' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
        env:
          NEXUS_USER: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASSWORD }}
          NEXUS_URL: ${{ secrets.NEXUS_URL }}
          NEXUS_REPO: ${{ secrets.NEXUS_REPOSITORY }}
          REPOSITORY_NAME: ${{ secrets.REPOSITORY_NAME }}
          NEXUS_ENV: ${{ steps.version.outputs.environment }}
          NEXUS_VERSION: ${{ steps.version.outputs.version }}
        run: |
          curl -u "${NEXUS_USER}:$NEXUS_PASS" \
            --upload-file build.zip \
            "${NEXUS_URL}/repository/${NEXUS_REPO}/${REPOSITORY_NAME}/${NEXUS_ENV}/${NEXUS_VERSION}.zip"
