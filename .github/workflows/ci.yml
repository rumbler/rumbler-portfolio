name: Continuous Integration
permissions:
  packages: write
  contents: read
  actions: read
  checks: write  
  deployments: write
  security-events: write

on:
  push:
    branches: 
      - "development"
      - "main"
      - "feat/*"
      - "fix/*"
      - "hotfix/*"
      - "bugfix/*"
      - "support/*"
    tags:
      - 'v*-rc.*'
      - 'v[0-9]*.[0-9]*.[0-9]*'

jobs:
  build-and-upload:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set version and environment
        id: version
        if: |
          github.event_name == 'push' && (github.ref == 'refs/heads/development' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/heads/feat/') || startsWith(github.ref, 'refs/heads/fix/') || startsWith(github.ref, 'refs/heads/hotfix/') || startsWith(github.ref, 'refs/heads/release/'))
        run: |
          case "${{ github.ref }}" in
            refs/heads/development) VERSION="$(git rev-parse --short HEAD)"; ENVIRONMENT="development" ;;
            refs/heads/main)       VERSION="rc-$(git rev-parse --short HEAD)"; ENVIRONMENT="release" ;;
            refs/tags/v[0-9]*.[0-9]*.[0-9]*) VERSION="${{ github.ref_name }}"; ENVIRONMENT="production" ;;
            refs/heads/feat/*)     VERSION="feat-$(git rev-parse --short HEAD)"; ENVIRONMENT="development" ;;
            refs/heads/fix/*)      VERSION="fix-$(git rev-parse --short HEAD)"; ENVIRONMENT="development" ;;
            refs/heads/hotfix/*)   VERSION="hotfix-$(git rev-parse --short HEAD)"; ENVIRONMENT="release" ;;
            refs/heads/release/*)  VERSION="release-$(git rev-parse --short HEAD)"; ENVIRONMENT="release" ;;
            *)                     VERSION="dev-$(git rev-parse --short HEAD)"; ENVIRONMENT="development" ;;
          esac

          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "environment=${ENVIRONMENT}" >> $GITHUB_OUTPUT

      - name: Setup pnpm
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2
        with:
          version: 9.15.3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build
        env:
          NODE_ENV: ${{ steps.version.outputs.environment }}
          REACT_APP_EMAIL_URL: ${{ secrets.REACT_APP_EMAIL_URL }}
          REACT_APP_GITHUB_URL: ${{ secrets.REACT_APP_GITHUB_URL }}
          REACT_APP_LINKEDIN_URL: ${{ secrets.REACT_APP_LINKEDIN_URL }}
          REACT_APP_WHATSAPP_URL: ${{ secrets.REACT_APP_WHATSAPP_URL }}
        run: |
          pnpm run build

      - uses: sonarsource/sonarqube-scan-action@bfd4e558cda28cda6b5defafb9232d191be8c203
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - uses: sonarsource/sonarqube-quality-gate-action@d304d050d930b02a896b0f85935344f023928496
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'LOW,MEDIUM,HIGH,CRITICAL'
          scanners: 'vuln'
          output: 'trivy-dependency-report.sarif'

      - name: Run Trivy to Scan for Misconfigurations
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          exit-code: '0'
          ignore-unfixed: true
          skip-dirs: 'node_modules'
          scanners: 'misconfig'
          output: 'trivy-misconfig-report.sarif'

      - name: Upload Trivy Dependency Report to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-dependency-report.sarif
          category: trivy-dependency-scan

      - name: Upload Trivy Misconfigurations Report to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-misconfig-report.sarif
          category: trivy-misconfig-scan

      - name: Zip build
        run: |
          cd build
          zip -r ../build.zip .
          cd ..

      - name: Upload to Nexus
        if: |
          github.event_name == 'push' && (github.ref == 'refs/heads/development' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/heads/feat/') || startsWith(github.ref, 'refs/heads/fix/') || startsWith(github.ref, 'refs/heads/hotfix/') || startsWith(github.ref, 'refs/heads/release/'))
        env:
          NEXUS_USER: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASSWORD }}
          NEXUS_URL: ${{ secrets.NEXUS_URL }}
          NEXUS_REPO: ${{ secrets.NEXUS_REPOSITORY }}
          REPOSITORY_NAME: ${{ secrets.REPOSITORY_NAME }}
          NEXUS_ENV: ${{ steps.version.outputs.environment }}
          NEXUS_VERSION: ${{ steps.version.outputs.version }}
        run: |
          curl -u "${NEXUS_USER}:$NEXUS_PASS" \
            --upload-file build.zip \
            "${NEXUS_URL}/repository/${NEXUS_REPO}/${REPOSITORY_NAME}/${NEXUS_ENV}/${NEXUS_VERSION}.zip"
