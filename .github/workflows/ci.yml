name: Continuous Integration

on:
  push:
    branches: 
      - "development"
      - "main"
    tags:
      - 'v*-rc.*'
      - 'v[0-9]*.[0-9]*.[0-9]*'

  pull_request:
    branches: 
      - "development"
      - "main"

jobs:
  set-version-and-environment:
    runs-on: self-hosted
    if: |
      github.event_name == 'push' && (github.ref == 'refs/heads/development' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    outputs:
      version: ${{ steps.version.outputs.version }}
      environment: ${{ steps.version.outputs.environment }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set Version and Environment
        id: version
        run: |
          if [[ $GITHUB_EVENT_NAME == 'push' ]]; then
            if [[ $GITHUB_REF == 'refs/heads/development' ]]; then
              VERSION=$(git rev-parse --short HEAD)
              ENVIRONMENT="development"
            elif [[ $GITHUB_REF == refs/tags/* ]]; then
              VERSION=${GITHUB_REF#refs/tags/}
              ENVIRONMENT="production"
            elif [[ $GITHUB_REF == 'refs/heads/main' ]]; then
              VERSION="v$(git rev-parse --short HEAD)"
              ENVIRONMENT="release"
            fi
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT

  build-and-upload:
    needs: set-version-and-environment
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.10.0

      - uses: pnpm/action-setup@v4
        with:
          version: 8
      
      - name: Install dependencies
        run: pnpm install

      - name: Run tests
        run: pnpm test

      - name: Build
        env:
          REACT_APP_LINKEDIN_URL: ${{ secrets.REACT_APP_LINKEDIN_URL }}
          REACT_APP_GITHUB_URL: ${{ secrets.REACT_APP_GITHUB_URL }}
          REACT_APP_EMAIL_URL: ${{ secrets.REACT_APP_EMAIL_URL }}
          REACT_APP_WHATSAPP_URL: ${{ secrets.REACT_APP_WHATSAPP_URL }}
        run: pnpm build

      - name: Create build artifact
        if: |
          github.event_name == 'push' && (github.ref == 'refs/heads/development' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
        run: |
          cd build
          zip -r ../build.zip .
          cd ..

      - name: Upload to Nexus
        if: |
          github.event_name == 'push' && (github.ref == 'refs/heads/development' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
        env:
          NEXUS_PASS: ${{ secrets.NEXUS_PASSWORD }}
          NEXUS_URL: ${{ secrets.NEXUS_URL }}
          NEXUS_REPO: ${{ secrets.NEXUS_REPOSITORY }}
        run: |
          curl -u "${{ secrets.NEXUS_USERNAME }}:$NEXUS_PASS" \
            --upload-file build.zip \
            "${NEXUS_URL}/repository/${NEXUS_REPO}/${{ github.event.repository.name }}/${{ needs.set-version-and-environment.outputs.environment }}/${{ needs.set-version-and-environment.outputs.version }}.zip"
